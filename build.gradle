buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    // jwt 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // swagger
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    // @notnull 문제 해결 패키지
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // AWS S3 사용
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'

    //자바 역직렬화 문제 해결 패키지
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // aws 시크릿 매니저
    // implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
    // implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'

    // aop 설정
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // ehcache 캐시 설정
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.ehcache:ehcache:3.8.0'
    implementation 'javax.cache:cache-api:1.0.0' // expiry 기능을 위해 필요

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'

    testImplementation 'org.mockito:mockito-core:4.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}

// 추가
jar {
    enabled = false
}

//build 시 통합테스트는 제외
test {
    filter {
        excludeTestsMatching "*ControllerTest*"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝

// gradle 빌드시 scan 을 찾지못하는 에러 조치
try {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
} catch (Exception ignored) {
}

