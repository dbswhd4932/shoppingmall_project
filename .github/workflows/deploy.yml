name: Java CI CD with Gradle
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      - name: 셋업 JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: gradlew 권한 부여
        run: chmod +x ./gradlew
        shell: bash

      - name: gradle 빌드
        run: ./gradlew build
        shell: bash

      # spring 어플리케이션 Docker Image 빌드
      - name: 도커 build & 도커 허브 push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      # 서버에서 Docker 이미지 실행
      - name: 도커 허브 pull & 도커 run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_WAS_IP }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script: | 
            docker stop ${{ secrets.DOCKER_REPO }}
            docker rm ${{ secrets.DOCKER_REPO }}
            docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker run --name ${{ secrets.DOCKER_REPO }} 
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} 
            -e AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} 
            -e AWS_REGION=ap-northeast-2 
            -e cloud.aws.credentials.access-key=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }} 
            -e cloud.aws.credentials.secret-key=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }} 
            -e cloud.aws.s3.bucket=${{ secrets.S3_BUCKET }} -e cloud.aws.region.static=ap-northeast-2 
            -e spring.datasource.url=${{ secrets.DATABASE_URL }}
            -e spring.datasource.username=${{ secrets.DATABASE_USERNAME }} 
            -e spring.datasource.password=${{ secrets.DATABASE_PASSWORD }} 
            -p 8080:8080
            -d ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}